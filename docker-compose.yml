# docker-compose.yml
# DMOC Web PWA - Production deployment with all services
version: '3.8'

services:
  # Main application
  app:
    build: .
    container_name: dmoc-web-app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://user:password@mysql:3306/transport
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_BUCKET=dmoc-media
      - S3_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    depends_on:
      - mysql
      - redis
      - minio
    volumes:
      - ./uploads:/app/uploads
    networks:
      - dmoc-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dmoc-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: transport
      MYSQL_USER: user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./prisma/schema.prisma:/docker-entrypoint-initdb.d/schema.prisma
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - dmoc-network

  # Redis for BullMQ and caching
  redis:
    image: redis:7-alpine
    container_name: dmoc-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - dmoc-network

  # MinIO for media storage (ANPR images, biometrics)
  minio:
    image: minio/minio:latest
    container_name: dmoc-minio
    restart: unless-stopped
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - dmoc-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: dmoc-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - dmoc-network

volumes:
  mysql_data:
  redis_data:
  minio_data:

networks:
  dmoc-network:
    driver: bridge
